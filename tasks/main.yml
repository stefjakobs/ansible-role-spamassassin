---
- name: ensure spamassassin is installed
  apt:
    pkg: ['spamassassin', 'spamc', 'libmail-dkim-perl']
    state: present

- name: ensure spamd group is present
  group:
    name: "{{ spamassassin_user }}"
    state: present

- name: ensure spamd user is present
  user:
    name: "{{ spamassassin_user }}"
    shell: /bin/false
    home: "{{ spamassassin_home_dir }}"
    groups: "{{ spamassassin_user }}"
    append: yes

- name: ensure spamassassin's directories are present
  file:
    path: "{{ spamassassin_home_dir }}"
    owner: "{{ spamassassin_user }}"
    group: "{{ spamassassin_user }}"
    state: directory
  with_items:
    - "{{ spamassassin_home_dir }}"
    - "{{ spamassassin_bayes_path }}"

- name: enable spamassin modules
  lineinfile:
    path: "/etc/spamassassin/{{ spamassassin_plugin_defaults[item].config }}"
    state: present
    regexp: "^#?loadplugin Mail::SpamAssassin::Plugin::{{ item }}"
    line: "loadplugin Mail::SpamAssassin::Plugin::{{ item }}"
  loop: "{{ spamassassin_enable_plugins }}"

- name: disable spamassin modules
  lineinfile:
    path: "/etc/spamassassin/{{ spamassassin_plugin_defaults[item].config }}"
    state: present
    regexp: "^#?loadplugin Mail::SpamAssassin::Plugin::{{ item }}"
    line: "#loadplugin Mail::SpamAssassin::Plugin::{{ item }}"
  loop: "{{ spamassassin_disable_plugins }}"

- name: ensure spamassassin config is latest
  template:
    src: default/spamassassin.j2
    dest: /etc/default/spamassassin
    owner: root
    group: root
    mode: 0644
  notify: restart spamassassin

- name: ensure spamassassin rule files are latest
  template:
    src: "spamassassin/{{ item }}.cf.j2"
    dest: "/etc/spamassassin/{{ item }}.cf"
    owner: root
    group: root
    mode: 0644
  notify: reload spamassassin
  loop:
  - local
  - custom
  - whitelist
  - blacklist

- name: ensure spamassassin ruleupdate cronjob is latest
  template:
    src: cron.daily/spamassassin.j2
    dest: /etc/cron.daily/spamassassin
    owner: root
    group: root
    mode: 0755
  notify: restart spamassassin

- name: ensure spamassassin logrotate is latest
  template:
    src: logrotate.d/spamd.j2
    dest: /etc/logrotate.d/spamd
    owner: root
    group: root
    mode: 0644

- name: ensure cronjob for spamtraining is present
  cron:
    name: "Spamassassin enable spamtraining for {{ item[1] }}@{{ item[0].domain }}"
    minute: "0"
    hour: "0"
    job: "/usr/bin/sa-learn --dbpath {{ spamassassin_home_dir }}/bayes_db/ --progress --spam /var/vmail/{{ item[0].domain }}/{{ item[1] }}/Maildir/.Junk > /dev/null 2>&1"
  with_subelements:
    - "{{ spamassassin_spamtraining_users }}"
    - users

- include: pyzor.yml
  when: spamassassin_pyzor_enabled

- include: razor.yml
  when: spamassassin_razor_enabled

- include: monit.yml
  when: spamassassin_monit_enabled
